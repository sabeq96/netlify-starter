"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _webpack = _interopRequireDefault(require("webpack"));

var _resolveFrom = _interopRequireDefault(require("resolve-from"));

var _htmlWebpackPlugin = _interopRequireDefault(require("html-webpack-plugin"));

var _caseSensitivePathsWebpackPlugin = _interopRequireDefault(require("case-sensitive-paths-webpack-plugin"));

var _extractCssChunksWebpackPlugin = _interopRequireDefault(require("extract-css-chunks-webpack-plugin"));

var _path = _interopRequireDefault(require("path"));

var _rules = _interopRequireDefault(require("./rules"));

function _default(_ref) {
  var config = _ref.config;
  var _config$paths = config.paths,
      DIST = _config$paths.DIST,
      NODE_MODULES = _config$paths.NODE_MODULES,
      SRC = _config$paths.SRC,
      HTML_TEMPLATE = _config$paths.HTML_TEMPLATE;
  process.env.REACT_STATIC_BASE_PATH = config.basePath;
  process.env.REACT_STATIC_PUBLIC_PATH = config.publicPath;
  process.env.REACT_STATIC_ASSETS_PATH = config.assetsPath;
  return {
    mode: 'development',
    optimization: {
      noEmitOnErrors: true,
      concatenateModules: true
    },
    context: _path["default"].resolve(__dirname, '../../../node_modules'),
    entry: ['react-hot-loader/patch'].concat((0, _toConsumableArray2["default"])(config.disableRuntime ? [] : [require.resolve('../../bootstrapPlugins'), require.resolve('../../bootstrapTemplates')]), [config.entry]).filter(Boolean),
    output: {
      filename: '[name].js',
      // never hash dev code
      chunkFilename: 'templates/[name].js',
      path: DIST,
      publicPath: process.env.REACT_STATIC_ASSETS_PATH || '/'
    },
    module: {
      rules: (0, _rules["default"])({
        config: config,
        stage: 'dev'
      }),
      strictExportPresence: true
    },
    resolve: {
      modules: [NODE_MODULES, SRC, DIST].concat((0, _toConsumableArray2["default"])([NODE_MODULES, SRC, DIST].map(function (d) {
        return _path["default"].resolve(__dirname, d);
      })), ['node_modules']),
      extensions: ['.wasm', '.mjs', '.js', '.json', '.jsx'],
      alias: {
        react$: (0, _resolveFrom["default"])(NODE_MODULES, 'react'),
        'react-dom$': (0, _resolveFrom["default"])(NODE_MODULES, 'react-dom'),
        // This is here so HMR modules use the same emitter instance.
        // Likely this is only needed for locally linked dev on RS, but still...
        'webpack/hot/emitter': (0, _resolveFrom["default"])(__dirname, 'webpack/hot/emitter')
      }
    },
    plugins: [new _webpack["default"].EnvironmentPlugin(process.env), new _htmlWebpackPlugin["default"]({
      inject: true,
      template: "!!raw-loader!".concat(HTML_TEMPLATE)
    }), new _webpack["default"].HotModuleReplacementPlugin(), new _webpack["default"].NamedModulesPlugin(), new _caseSensitivePathsWebpackPlugin["default"](), new _extractCssChunksWebpackPlugin["default"]({
      filename: '[name].css'
    })],
    devtool: 'cheap-module-source-map'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGF0aWMvd2VicGFjay93ZWJwYWNrLmNvbmZpZy5kZXYuanMiXSwibmFtZXMiOlsiY29uZmlnIiwicGF0aHMiLCJESVNUIiwiTk9ERV9NT0RVTEVTIiwiU1JDIiwiSFRNTF9URU1QTEFURSIsInByb2Nlc3MiLCJlbnYiLCJSRUFDVF9TVEFUSUNfQkFTRV9QQVRIIiwiYmFzZVBhdGgiLCJSRUFDVF9TVEFUSUNfUFVCTElDX1BBVEgiLCJwdWJsaWNQYXRoIiwiUkVBQ1RfU1RBVElDX0FTU0VUU19QQVRIIiwiYXNzZXRzUGF0aCIsIm1vZGUiLCJvcHRpbWl6YXRpb24iLCJub0VtaXRPbkVycm9ycyIsImNvbmNhdGVuYXRlTW9kdWxlcyIsImNvbnRleHQiLCJwYXRoIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImVudHJ5IiwiZGlzYWJsZVJ1bnRpbWUiLCJyZXF1aXJlIiwiZmlsdGVyIiwiQm9vbGVhbiIsIm91dHB1dCIsImZpbGVuYW1lIiwiY2h1bmtGaWxlbmFtZSIsIm1vZHVsZSIsInJ1bGVzIiwic3RhZ2UiLCJzdHJpY3RFeHBvcnRQcmVzZW5jZSIsIm1vZHVsZXMiLCJtYXAiLCJkIiwiZXh0ZW5zaW9ucyIsImFsaWFzIiwicmVhY3QkIiwicGx1Z2lucyIsIndlYnBhY2siLCJFbnZpcm9ubWVudFBsdWdpbiIsIkh0bWxXZWJwYWNrUGx1Z2luIiwiaW5qZWN0IiwidGVtcGxhdGUiLCJIb3RNb2R1bGVSZXBsYWNlbWVudFBsdWdpbiIsIk5hbWVkTW9kdWxlc1BsdWdpbiIsIkNhc2VTZW5zaXRpdmVQYXRoc1BsdWdpbiIsIkV4dHJhY3RDc3NDaHVua3MiLCJkZXZ0b29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUVlLHdCQUFxQjtBQUFBLE1BQVZBLE1BQVUsUUFBVkEsTUFBVTtBQUFBLHNCQUNpQkEsTUFBTSxDQUFDQyxLQUR4QjtBQUFBLE1BQzFCQyxJ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LENBQXFCO0FBQUVyQixNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUFyQixDQVRPLENBNUNKO0FBdURMc0IsSUFBQUEsT0FBTyxFQUFFO0FBdkRKLEdBQVA7QUF5REQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrJ1xuaW1wb3J0IHJlc29sdmVGcm9tIGZyb20gJ3Jlc29sdmUtZnJvbSdcbmltcG9ydCBIdG1sV2VicGFja1BsdWdpbiBmcm9tICdodG1sLXdlYnBhY2stcGx1Z2luJ1xuaW1wb3J0IENhc2VTZW5zaXRpdmVQYXRoc1BsdWdpbiBmcm9tICdjYXNlLXNlbnNpdGl2ZS1wYXRocy13ZWJwYWNrLXBsdWdpbidcbmltcG9ydCBFeHRyYWN0Q3NzQ2h1bmtzIGZyb20gJ2V4dHJhY3QtY3NzLWNodW5rcy13ZWJwYWNrLXBsdWdpbidcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbmltcG9ydCBydWxlcyBmcm9tICcuL3J1bGVzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IGNvbmZpZyB9KSB7XG4gIGNvbnN0IHsgRElTVCwgTk9ERV9NT0RVTEVTLCBTUkMsIEhUTUxfVEVNUExBVEUgfSA9IGNvbmZpZy5wYXRoc1xuXG4gIHByb2Nlc3MuZW52LlJFQUNUX1NUQVRJQ19CQVNFX1BBVEggPSBjb25maWcuYmFzZVBhdGhcbiAgcHJvY2Vzcy5lbnYuUkVBQ1RfU1RBVElDX1BVQkxJQ19QQVRIID0gY29uZmlnLnB1YmxpY1BhdGhcbiAgcHJvY2Vzcy5lbnYuUkVBQ1RfU1RBVElDX0FTU0VUU19QQVRIID0gY29uZmlnLmFzc2V0c1BhdGhcblxuICByZXR1cm4ge1xuICAgIG1vZGU6ICdkZXZlbG9wbWVudCcsXG4gICAgb3B0aW1pemF0aW9uOiB7XG4gICAgICBub0VtaXRPbkVycm9yczogdHJ1ZSxcbiAgICAgIGNvbmNhdGVuYXRlTW9kdWxlczogdHJ1ZSxcbiAgICB9LFxuICAgIGNvbnRleHQ6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi8uLi8uLi9ub2RlX21vZHVsZXMnKSxcbiAgICBlbnRyeTogW1xuICAgICAgJ3JlYWN0LWhvdC1sb2FkZXIvcGF0Y2gnLFxuICAgICAgLi4uKGNvbmZpZy5kaXNhYmxlUnVudGltZVxuICAgICAgICA/IFtdXG4gICAgICAgIDogW1xuICAgICAgICAgICAgcmVxdWlyZS5yZXNvbHZlKCcuLi8uLi9ib290c3RyYXBQbHVnaW5zJyksXG4gICAgICAgICAgICByZXF1aXJlLnJlc29sdmUoJy4uLy4uL2Jvb3RzdHJhcFRlbXBsYXRlcycpLFxuICAgICAgICAgIF0pLFxuICAgICAgY29uZmlnLmVudHJ5LFxuICAgIF0uZmlsdGVyKEJvb2xlYW4pLFxuICAgIG91dHB1dDoge1xuICAgICAgZmlsZW5hbWU6ICdbbmFtZV0uanMnLCAvLyBuZXZlciBoYXNoIGRldiBjb2RlXG4gICAgICBjaHVua0ZpbGVuYW1lOiAndGVtcGxhdGVzL1tuYW1lXS5qcycsXG4gICAgICBwYXRoOiBESVNULFxuICAgICAgcHVibGljUGF0aDogcHJvY2Vzcy5lbnYuUkVBQ1RfU1RBVElDX0FTU0VUU19QQVRIIHx8ICcvJyxcbiAgICB9LFxuICAgIG1vZHVsZToge1xuICAgICAgcnVsZXM6IHJ1bGVzKHsgY29uZmlnLCBzdGFnZTogJ2RldicgfSksXG4gICAgICBzdHJpY3RFeHBvcnRQcmVzZW5jZTogdHJ1ZSxcbiAgICB9LFxuICAgIHJlc29sdmU6IHtcbiAgICAgIG1vZHVsZXM6IFtcbiAgICAgICAgTk9ERV9NT0RVTEVTLFxuICAgICAgICBTUkMsXG4gICAgICAgIERJU1QsXG4gICAgICAgIC4uLltOT0RFX01PRFVMRVMsIFNSQywgRElTVF0ubWFwKGQgPT4gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgZCkpLFxuICAgICAgICAnbm9kZV9tb2R1bGVzJyxcbiAgICAgIF0sXG4gICAgICBleHRlbnNpb25zOiBbJy53YXNtJywgJy5tanMnLCAnLmpzJywgJy5qc29uJywgJy5qc3gnXSxcbiAgICAgIGFsaWFzOiB7XG4gICAgICAgIHJlYWN0JDogcmVzb2x2ZUZyb20oTk9ERV9NT0RVTEVTLCAncmVhY3QnKSxcbiAgICAgICAgJ3JlYWN0LWRvbSQnOiByZXNvbHZlRnJvbShOT0RFX01PRFVMRVMsICdyZWFjdC1kb20nKSxcbiAgICAgICAgLy8gVGhpcyBpcyBoZXJlIHNvIEhNUiBtb2R1bGVzIHVzZSB0aGUgc2FtZSBlbWl0dGVyIGluc3RhbmNlLlxuICAgICAgICAvLyBMaWtlbHkgdGhpcyBpcyBvbmx5IG5lZWRlZCBmb3IgbG9jYWxseSBsaW5rZWQgZGV2IG9uIFJTLCBidXQgc3RpbGwuLi5cbiAgICAgICAgJ3dlYnBhY2svaG90L2VtaXR0ZXInOiByZXNvbHZlRnJvbShfX2Rpcm5hbWUsICd3ZWJwYWNrL2hvdC9lbWl0dGVyJyksXG4gICAgICB9LFxuICAgIH0sXG4gICAgcGx1Z2luczogW1xuICAgICAgbmV3IHdlYnBhY2suRW52aXJvbm1lbnRQbHVnaW4ocHJvY2Vzcy5lbnYpLFxuICAgICAgbmV3IEh0bWxXZWJwYWNrUGx1Z2luKHtcbiAgICAgICAgaW5qZWN0OiB0cnVlLFxuICAgICAgICB0ZW1wbGF0ZTogYCEhcmF3LWxvYWRlciEke0hUTUxfVEVNUExBVEV9YCxcbiAgICAgIH0pLFxuICAgICAgbmV3IHdlYnBhY2suSG90TW9kdWxlUmVwbGFjZW1lbnRQbHVnaW4oKSxcbiAgICAgIG5ldyB3ZWJwYWNrLk5hbWVkTW9kdWxlc1BsdWdpbigpLFxuICAgICAgbmV3IENhc2VTZW5zaXRpdmVQYXRoc1BsdWdpbigpLFxuICAgICAgbmV3IEV4dHJhY3RDc3NDaHVua3MoeyBmaWxlbmFtZTogJ1tuYW1lXS5jc3MnIH0pLCAvLyBuZXZlciBoYXNoIGRldiBjb2RlXG4gICAgXSxcbiAgICBkZXZ0b29sOiAnY2hlYXAtbW9kdWxlLXNvdXJjZS1tYXAnLFxuICB9XG59XG4iXX0=